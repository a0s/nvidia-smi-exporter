name: Docker image
on:
  release:
    types: [published]
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Variables
        id: variables
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          echo ::set-output name=FULL_VERSION::$(git describe --tags --dirty --always)
          echo ::set-output name=TARGET_PLATFORMS::"linux/amd64"
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push tag
        run: |
          docker buildx build \
            --platform ${{ steps.variables.outputs.TARGET_PLATFORMS }} \
            --build-arg FULL_VERSION=${{ steps.variables.outputs.FULL_VERSION }} \
            -t a00s/${{ steps.variables.outputs.REPOSITORY_NAME }}:${{ steps.variables.outputs.SOURCE_TAG }} \
            . \
            --push
      - name: Build and push latest
        run: |
          docker buildx build \
            --platform ${{ steps.variables.outputs.TARGET_PLATFORMS }} \
            --build-arg FULL_VERSION=${{ steps.variables.outputs.FULL_VERSION }} \
            -t a00s/${{ steps.variables.outputs.REPOSITORY_NAME }}:latest \
            . \
            --push
